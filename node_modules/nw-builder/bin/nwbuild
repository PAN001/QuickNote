#!/usr/bin/env node
var optimist = require('optimist');
var updateNotifier = require('update-notifier');
var NwBuilder = require('./../lib');
var path = require('path');
var detectCurrentPlatform = require('../lib/detectCurrentPlatform.js');

var argv = optimist
    .usage('Usage: nwbuild [options] [path]')

    .alias('p', 'platforms')
    .default('p', 'osx32,osx64,win32,win64')
    .describe('p', 'Platforms to build, comma-sperated, can be: win32,win64,osx32,osx64,linux32,linux64')

    .alias('v', 'version')
    .default('v', 'latest')
    .describe('v', 'The nw version, eg. 0.8.4')

    .alias('r', 'run')
    .default('r', false)
    .describe('r', 'Runs NW.js for the current platform')
    .boolean('r')


    .alias('o', 'buildDir')
    .default('o', './build')
    .describe('o', 'The build folder')


    .alias('f', 'forceDownload')
    .default('f', false)
    .describe('f', 'Force download of NW.js')
    .boolean('f')

    .describe('cacheDir', 'The cache folder')

    .default('quiet', false)
    .describe('quiet', 'Disables logging')
    .boolean('quiet')

    .argv;

// Howto Help
if (argv.h || argv.help) {
    optimist.showHelp();
    process.exit(0);
}

// Update notification
var notifier = updateNotifier({
    pkg: require('./../package.json')
});
if (notifier.update) {
    notifier.notify();
}

// Error if there are no files
var files = argv._[0];
if(!files) {
    optimist.showHelp();
    process.exit(1);
}

var options = {
    files: path.resolve(process.cwd(), files) + '/**/*',
    platforms: argv.platforms.split(','),
    version: argv.version,
    macIcns: argv.macIcns || false,
    winIco: argv.winIco || false,
    cacheDir: argv.cacheDir ? path.resolve(process.cwd(), argv.cacheDir) : path.resolve(__dirname, '..', 'cache'),
    buildDir: path.resolve(process.cwd(), argv.buildDir),
    forceDownload: argv.forceDownload
};

// Check Platform, if we are in run mode
if(argv.r) {
    var currentPlatform = detectCurrentPlatform();
    options.platforms = [ currentPlatform ];
    options.currentPlatform = currentPlatform;
}


// Build App
var nw = new NwBuilder(options);

// Logging
if(!(argv.quiet || argv.quite)) {
    nw.on('log',  console.log);
}

// Build or run the app
var np = (argv.r ? nw.run() : nw.build());
np.then(function() {
    process.exit(0);
}).catch (function(error) {
    if (error) {
        console.error(error);
        process.exit(1);
    }
});
