/*!
Default styles for videojs-record vGENERATED_AT_BUILD
*/

/* Icons
--------------------------------------------------------------------------------
The control icons are from a custom font. Font icons allow for easy scaling and
coloring of icons.
*/
$icon-font-family: {{fontName}};
$icon-font-path: 'font' !default;

@font-face {
  font-family: $icon-font-family;
  src: url('#{$icon-font-path}/{{fontName}}.eot?#iefix') format('eot');
}
@font-face {
  font-family: $icon-font-family;
  src: url(data:application/font-woff;charset=utf-8;base64,BASE64_WOFF_FONT) format('woff'),
       url(data:application/x-font-ttf;charset=utf-8;base64,BASE64_TTF_FONT) format('truetype');
  font-weight: normal;
  font-style: normal;
}

// http://sass-lang.com/documentation/file.SASS_REFERENCE.html#maps
$icons: (
  {{#each codepoints}}
		{{@key}}: \\{{this}},
	{{/each}}
);

// NOTE: This is as complex as we want to get with SCSS functionality.
//
// Now that we have a map of icons above, we can iterate over that map and create an icon class
// for each icon in that list. The iterator below produces CSS classes like this:
//
// .vjs-icon-play {
//   font-family: VideoJS;
//   font-weight: normal;
//   font-style: normal;
// }
// .vjs-icon-play:before { content: "\25b6"; }
//
// We can then use @extend in the codebase when we need to add an icon to a class. @extend builds up
// the selectors for you so you can avoid duplication. This is generally a bad idea, but since each
// icon should only be extended one or two other places, we'll roll with it.
@each $name, $content in $icons {
  .vjs-icon-#{$name} {
    font-family: $icon-font-family;
    font-weight: normal;
    font-style: normal;

    &:before {
      content: $content;
    }
  }
}

/* Area containing the recorder elements.
--------------------------------------------------------------------------------
*/
.vjs-record
{
  display: inline-block;
  vertical-align: middle;
  background-repeat: no-repeat;
  background-position: 50% 50%;
  background-size: contain;
  cursor: default;
  margin: 0px;
  padding: 0px;
  position: absolute;
  top: 0px;
  right: 0px;
  bottom: 0px;
  left: 0px;
  height: 100%;
}

/* Device Button (large centered button at startup)
--------------------------------------------------------------------------------
*/
.vjs-device-button.vjs-control
{
    font-size: 3em;
    position: absolute;
    z-index: 2;

    /* Center it vertically */
    top: 50%;
    /* Center it horizontally */
    left: 50%;

    width: 4em;
    height: 3.0em;
    margin-top: -1.8000000000000001em;
    margin-left: -2.1em;

    display: block;
    cursor: pointer;
    opacity: 1;

    /* transition */
    -webkit-transition: all .4s;
       -moz-transition: all .4s;
         -o-transition: all .4s;
            transition: all .4s;
    text-align: center;
    vertical-align: middle;

    /* border-radius */
    -webkit-border-radius: .8em;
       -moz-border-radius: .8em;
            border-radius: .8em;
    /* Need a slightly gray bg so it can be seen on black backgrounds */
    /* background-color-with-alpha */
    background-color: #07141e;
    background-color: rgba(7, 20, 30, .7);
    /* box-shadow */
    -webkit-box-shadow: 0 0 1em rgba(255, 255, 255, .25);
       -moz-box-shadow: 0 0 1em rgba(255, 255, 255, .25);
            box-shadow: 0 0 1em rgba(255, 255, 255, .25);
}

.vjs-error .vjs-device-button
{
    display: none;
}

/* Record Toggle (start/stop recording button in controlbar)
--------------------------------------------------------------------------------
*/
.vjs-record-button.vjs-control
{
    cursor: pointer;
}

.vjs-error .vjs-record-button
{
    display: none;
}

.vjs-record-button.vjs-control.vjs-icon-record-start:before {
    font-size: 1.4em;
    line-height: 2.2em;
}

/* Camera Toggle (snapshot try/retry)
--------------------------------------------------------------------------------
*/
.vjs-camera-button.vjs-control
{
    cursor: pointer;
}

.vjs-error .vjs-camera-button
{
    display: none;
}

/* Recording Indicator (dot in top-right corner visible when recording)
--------------------------------------------------------------------------------
*/

.vjs-record {
  overflow: hidden;
}
.video-js .vjs-control.vjs-record-indicator.vjs-hidden {
  display: block!important;
  opacity: 0;
  transform: translateX(1em) rotateX(-90deg) scale(0.9);
  transition: all .5s, transform .5s .25s;
}

.video-js .vjs-control.vjs-record-indicator {
  width: .8em;
  height: .8em;
  background-color: #ff625e;
  border-radius: 50%;
  right: 2.5ex;
  top: 2ex;
  position: absolute;
  opacity: 1;
  transform: rotateX(0) scale(1.3);
  transition: all .5s, transform .2s .1s;
  }

.video-js .vjs-control.vjs-record-indicator:before {
  content: "REC";
  color: white;
  position: absolute;
  left: -2.7em;
  font-family: "Helvetica", sans-serif;
  animation-name: pulsetext;
  animation-duration: 5s;
  animation-iteration-count: infinite;
  top: -0.3em;
  font-size: 0.8em;
  opacity: 1;
  transition: opacity .5s .2s;
  }

.video-js .vjs-control.vjs-record-indicator:after {
  content: "";
  display: block;
  height: calc(.8em - 4px);
  width: calc(.8em - 4px);
  border: 2px solid #ff625e;
  border-radius: 50%;
  position: absolute;
  top: 2px;
  left: 2px;
  transform-origin: center;
  animation-name: pulse;
  animation-duration: 2s;
  animation-iteration-count: infinite;
  animation-delay: .25s; }

@keyframes pulsetext {
  from {
    opacity: .75; }
  25% {
    opacity: .5; }
  50% {
    opacity: .75; }
  75% {
    opacity: .5; }
  to {
    opacity: .75; } }

@keyframes pulse {
  from {
    opacity: 1;
    transform: scale(1.6); }
  50% {
    opacity: .5;
    transform: scale(2.5); }
  to {
    opacity: 0;
    transform: scale(3.5); } }
